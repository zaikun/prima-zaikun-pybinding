name: Test Python

on:
  # Trigger the workflow on push or pull request
  #push:
  pull_request:  # DANGEROUS! MUST be disabled for self-hosted runners!
  # Trigger the workflow by cron. The default time zone of GitHub Actions is UTC.
  schedule:
    - cron: '0 16 4-31/4 * *'
  # Trigger the workflow manually
  workflow_dispatch:


jobs:

  test:
    name: Run Python tests
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        solver: [cobyla]
        testdim: [small]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3.5.3
        with:
          submodules: recursive
        #   ssh-key: ${{ secrets.SSH_PRIVATE_KEY_ACT }} # This forces checkout to use SSH, not HTTPS
        # As of 230425, checkout with ssh fails frequently on Windows runners.

      # TODO: See if this is necessary for Python
      # - name: Make tools such as grep, make, and git available on Windows
      #   if: runner.os == 'Windows'
      #   run: $env:Path += ";C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\ProgramData\Chocolatey\bin"

      # - name: Miscellaneous setup
      #   shell: bash  # Important; otherwise, the following statements do not work on Windows.
      #   run: bash .github/scripts/misc_setup
      - name: Setup Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.11"
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install numpy pytest

      - name: Conduct the test
        # shell: bash  # Important; otherwise, `<` will not work on Windows.
        run: |
            cd "$ROOT_DIR"/python && pytest --cov=src --cov-report=html test


      - name: Store artifacts
        uses: actions/upload-artifact@v3.1.2
        if: always()  # Always run even if the workflow is canceled manually or due to overtime.
        # Note that `$TEST_DIR` does not work on Windows, where its equivalent is `$env:TEST_DIR`.
        # In the following, we enquire `$TEST_DIR` by using the `env` context, which is platform independent.
        with:
          path: ${{ env.TEST_DIR }}/prima/python/htmlcov/*

      - name: Remove the test data
        shell: bash  # Important; otherwise, `rm -rf` will not work on Windows.
        run: rm -rf ${{ env.TEST_DIR }}
